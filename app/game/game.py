from aiogram import F, Router, types
from aiogram.types import Message, CallbackQuery
from app.__init__ import bot
from app.handlers.game_handlers import choise
import logging
import random

router = Router()

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
game_states = {}

async def game(users_in_game):

    user_one, user_two = users_in_game
    first_player, second_player = random.sample([user_one, user_two], 2)

    await bot.send_message(first_player[0], "‚ùï–•–æ–¥ –¥–æ—Å—Ç–∞–µ—Ç—Å—è –≤–∞–º, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=choise)
    await bot.send_message(second_player[0], "‚ùóÔ∏è–•–æ–¥ –¥–æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫—É, –æ–∂–∏–¥–∞–π—Ç–µ –µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–µ.")

    # –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–¥–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ–±—ä–µ–∫—Ç callback


@router.callback_query(F.data == '–°—Ç—Ä–µ–ª—è—Ç—å –≤ —Å–µ–±—è')
async def shoot_self(callback: CallbackQuery, users_in_game):
    first_player, second_player = users_in_game

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫—Ç–æ —Å—Ç—Ä–µ–ª—è–µ—Ç, –Ω–∞ –æ—Å–Ω–æ–≤–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    shooter = first_player if callback.from_user.id == first_player[0] else second_player

    if shooter[0] == first_player[0]:
        await process_shooting(first_player, second_player)
    else:
        await process_shooting(second_player, first_player)

async def process_shooting(shooter, opponent):
    if random.randrange(1, 7) == 1:
        await bot.send_message(shooter[0], "üíÄ–ü—Ä–∏—Å—Ç–∞–≤–∏–≤ —Å—Ç–≤–æ–ª —Ä–µ–≤–æ–ª—å–≤–µ—Ä–∞ –∫ —Å–≤–æ–µ–º—É –≤–∏—Å–∫—É –∏ —Å–ø—É—Å—Ç–∏–≤ –∫—É—Ä–æ–∫, –≤—Å√´ –∫—Ä—É–≥–æ–º —Ä–µ–∑–∫–æ –ø–æ—á–µ—Ä–Ω–µ–ª–æ, –≤—ã –º–µ—Ä—Ç–≤—ã.")
        await bot.send_message(opponent[0], "üò¨–í—ã –≤–∏–¥–∏—Ç–µ, –∫–∞–∫ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ —Å–ø—É—Å—Ç–∏–ª –∫—É—Ä–æ–∫, –¥–µ—Ä–∂–∞ —Ä–µ–≤–æ–ª—å–≤–µ—Ä —É —Å–≤–æ–µ–≥–æ –≤–∏—Å–∫–∞, –∏ –æ—Å—Ç–∞—ë—Ç—Å—è —Å –¥—ã—Ä–∫–æ–π –≤ –≥–æ–ª–æ–≤–µ. –ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ –º—ë—Ä—Ç–≤.")
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
    else:
        await bot.send_message(shooter[0], "üòÄ–ü—Ä–∏—Å—Ç–∞–≤–∏–≤ —Å—Ç–≤–æ–ª —Ä–µ–≤–æ–ª—å–≤–µ—Ä–∞ –∫ —Å–≤–æ–µ–º—É –≤–∏—Å–∫—É –∏ —Å–ø—É—Å—Ç–∏–≤ –∫—É—Ä–æ–∫, –≤—ã –æ—Å—Ç–∞–ª–∏—Å—å –∂–∏–≤—ã, —Ö–æ–¥ –æ—Å—Ç–∞—ë—Ç—Å—è —É –≤–∞—Å.", reply_markup=choise)
        await bot.send_message(opponent[0], "–í—ã –≤–∏–¥–∏—Ç–µ, –∫–∞–∫ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ —Å–ø—É—Å—Ç–∏–ª –∫—É—Ä–æ–∫, –¥–µ—Ä–∂–∞ —Ä–µ–≤–æ–ª—å–≤–µ—Ä —É —Å–≤–æ–µ–≥–æ –≤–∏—Å–∫–∞, –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ –æ—Å—Ç–∞—ë—Ç—Å—è –∂–∏–≤—ã–º, —Ö–æ–¥ –ø–æ –ø—Ä–µ–∂–Ω–µ–º—É —É –Ω–µ–≥–æ.")